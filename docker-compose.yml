version: '3'
services:
  redis:
    image: redis:alpine
    # ports:
    #   - 6379:6379
    networks:
      - mynetwork

  postgres:
    image: postgres:alpine
    # ports:
    #   - 5432:5432
    environment:
      - POSTGRES_USER=your_username
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_DB=your_database
    networks:
      - mynetwork

  rails:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "bundle exec rails db:create && bundle exec rails db:migrate && rm -f tmp/pids/server.pid && bundle exec rails server -e production"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://your_username:your_password@postgres:5432/your_database
      RAILS_ENV: production   # Thêm biến môi trường để xác định là môi trường production
      REDIS_URL: redis://redis:6379
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      SECRET_KEY_BASE: jwt-token-secret
    restart: unless-stopped
    ports:
      - 3000:3000
    # volumes:
    #   - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - mynetwork

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    command: bundle exec sidekiq
    environment:
      DATABASE_URL: postgresql://your_username:your_password@postgres:5432/your_database
      RAILS_ENV: production
      REDIS_URL: redis://redis:6379
    # volumes:
    #   - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - mynetwork

  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_API_URL: http://localhost:3000
        NEXT_PUBLIC_BACKEND_WS: ws://localhost:3000/cable
    environment:
      BACKEND_API_URL: http://rails:3000
    ports:
      - 8080:3000
    depends_on:
      - rails
    networks:
      - mynetwork

  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   restart: unless-stopped
  #   depends_on:
  #     - rails
  #   networks:
  #     - mynetwork

volumes:
  redis_data:

networks:
  mynetwork:
    driver: bridge